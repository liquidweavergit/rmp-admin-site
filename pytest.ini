[tool:pytest]
# Men's Circle Management Platform - pytest Configuration
# File: pytest.ini
# Purpose: Global pytest settings for comprehensive test automation

# Test discovery and execution patterns
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test* *Tests
python_functions = test_*

# Minimum pytest version requirement
minversion = 7.0

# Global test execution options
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --durations=10
    --maxfail=5
    --asyncio-mode=auto
    --disable-warnings

# Test markers for categorizing tests
markers =
    unit: Unit tests for individual components
    integration: Integration tests across components
    e2e: End-to-end tests for complete workflows
    api: API endpoint testing
    database: Database layer testing
    auth: Authentication and authorization tests
    payment: Payment processing tests
    circle: Men's circle management tests
    event: Event management tests
    notification: Notification system tests
    performance: Performance and load tests
    security: Security and vulnerability tests
    slow: Tests that take longer than 5 seconds
    fast: Tests that complete in under 1 second
    docker: Tests requiring Docker containers
    redis: Tests requiring Redis connection
    postgres: Tests requiring PostgreSQL database
    stripe: Tests requiring Stripe payment processing
    sendgrid: Tests requiring SendGrid email service
    twilio: Tests requiring Twilio SMS service
    admin: Admin interface tests
    user: User interface tests
    facilitator: Facilitator role tests
    member: Member role tests
    guest: Guest access tests
    privacy: Privacy and data protection tests
    gdpr: GDPR compliance tests
    pci: PCI DSS compliance tests
    backup: Data backup and recovery tests
    migration: Database migration tests
    fixture: Test fixture and factory tests
    mock: Mock and stub testing
    smoke: Smoke tests for basic functionality
    regression: Regression tests for bug prevention

# Async testing configuration
asyncio_mode = auto

# Test output and logging
console_output_style = progress
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Log file settings
log_file = tests/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d: %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Filter warnings to reduce noise
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*unclosed.*:ResourceWarning
    ignore:.*pytest-asyncio.*:DeprecationWarning
    error::pytest.PytestUnraisableExceptionWarning

# JUnit XML reporting for CI/CD
junit_family = xunit2
junit_logging = all
junit_log_passing_tests = true

# Cache configuration
cache_dir = .pytest_cache

# Collection ignore patterns
collect_ignore_glob = 
    **/build/**
    **/dist/**
    **/.tox/**
    **/.venv/**
    **/venv/**
    **/env/**
    **/node_modules/**
    **/__pycache__/**
    **/.pytest_cache/**
    **/.coverage
    **/htmlcov/**
    **/coverage.xml 