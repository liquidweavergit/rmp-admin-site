"""Add CircleMembership model with payment status tracking

Revision ID: 843c768c33cd
Revises: a930217cd080
Create Date: 2025-06-08 18:06:25.955927

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '843c768c33cd'
down_revision: Union[str, None] = 'a930217cd080'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('circle_memberships',
    sa.Column('circle_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('payment_status', sa.String(length=20), nullable=False),
    sa.Column('stripe_subscription_id', sa.String(length=255), nullable=True),
    sa.Column('next_payment_due', sa.DateTime(timezone=True), nullable=True),
    sa.Column('joined_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.CheckConstraint("payment_status IN ('pending', 'current', 'overdue', 'paused')", name='valid_payment_status'),
    sa.CheckConstraint('stripe_subscription_id IS NULL OR LENGTH(stripe_subscription_id) <= 255', name='stripe_subscription_id_length'),
    sa.ForeignKeyConstraint(['circle_id'], ['circles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('circle_id', 'user_id')
    )
    op.create_index(op.f('ix_circle_memberships_stripe_subscription_id'), 'circle_memberships', ['stripe_subscription_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_circle_memberships_stripe_subscription_id'), table_name='circle_memberships')
    op.drop_table('circle_memberships')
    # ### end Alembic commands ###
